{"version":3,"sources":["components/AddForm.js","components/NoListComponent.js","components/list/List.js","components/Index.js","App.js","serviceWorker.js","index.js"],"names":["AddForm","className","this","props","type","onSubmit","handleAddItem","id","name","value","listId","placeholder","handleAddList","React","Component","NoMatchRouteComponent","src","alt","to","List","console","log","item","NoListComponent","currentColor","color","randomColor","listStyle","backgroundColor","hexToRgba","itemKey","listLocked","locked","listLockedButtonClassName","totalTicks","style","size","onClick","toggleLockedList","items","length","list","justNow","moment","format","showTutorial","map","tickItem","itemStyle","menuStyle","display","menuOpened","colValues","values","ticks","key","event","target","parentElement","handleTickUp","toggleItemMenu","handleChangeItem","handleChangeItemValue","handleRemoveItem","Index","lists","showWelcome","i","toggleMenu","handleChangeList","handleListColorChange","handleRemoveList","DEFAULT_STATE","counter","isBlocked","DEFAULT_LIST","DEFAULT_ITEM","App","bind","resetAll","loadedData","localStorage","getItem","parsedState","JSON","parse","forEach","state","Object","assign","window","addEventListener","setState","data","form","toast","error","currentState","newList","uuidv1","concat","upload","resetForm","Swal","fire","title","t","text","showCancelButton","then","result","filter","currentName","String","input","inputValue","rawInputName","newName","warn","currentItem","inputAttributes","min","buttons","inputValidator","parseInt","newItem","conf","newState","removeItem","setItem","stringify","tag","blocking","message","href","width","height","data-toggle","data-target","aria-controls","aria-expanded","aria-label","role","rel","path","exact","render","match","params","find","handleItemColorChange","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","document","getElementById","URL","process","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d8057cff.chunk.63534440-c8e8-11e9-83b4-3579e54da1dc.js","sourcesContent":["import React from 'react';\nimport { Form, Input } from '@rocketseat/unform';\nimport { FaPlusSquare } from 'react-icons/fa';\n\nexport class AddForm extends React.Component {\n\n  render() {\n\n    return (\n      <footer className=\"footer\">\n      <div className=\"container\">\n        {(\n          this.props.type === \"item\" ?\n            <Form onSubmit={this.props.handleAddItem} className=\"row\" id=\"addNewItemForm\">\n              <Input type=\"hidden\" name=\"id\" value={this.props.listId} />\n              <Input className=\"form-control form-control-lg\" name=\"name\" placeholder=\"new item\" />\n              <button type=\"submit\" className=\"btn btn-primary btn-lg\">\n                <FaPlusSquare />\n                <span className=\"ml-2\">add</span>\n              </button>\n            </Form> :\n            <Form onSubmit={this.props.handleAddList} className=\"row\" id=\"addNewListForm\">\n              <Input className=\"form-control form-control-lg\" name=\"name\" placeholder=\"new list\" />\n              <button type=\"submit\" className=\"btn btn-primary btn-lg btn-block\">\n                <FaPlusSquare />\n                <span className=\"ml-2\">add</span>\n              </button>\n            </Form>\n        )}\n\n      </div>\n      </footer>\n    );\n\n  }\n\n}\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst NoMatchRouteComponent = () => (\n  <div className=\"row errorContainer\">\n    <img className=\"img-fluid\" src=\"/404.jpg\" alt=\"lost\" />\n    <h1>404</h1>\n    <h2>Not Found</h2>\n    <Link to=\"/\" className=\"btn btn-primary btn-block\">\n      Go Home\n    </Link>\n  </div>\n);\n\nexport default NoMatchRouteComponent;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { FiMoreHorizontal, FiEdit, FiArrowLeftCircle, FiUnlock, FiLock } from 'react-icons/fi';\nimport { MdRemoveCircle } from 'react-icons/md';\n\nimport { randomColor } from 'randomcolor';\nimport hexToRgba from 'hex-to-rgba';\nimport { AddForm } from '../AddForm';\n\nimport moment from 'moment';\nimport NoListComponent from '../NoListComponent';\n\nimport { FiArrowUp, FiArrowDown } from \"react-icons/fi\";\n\nfunction showTutorial(list) {\n\n  const justNow = moment().format(\"H:m a\");\n\n  return (\n    <div className=\"col-12\">\n      <div className=\"tutorial-card\">\n        <p>hey, again<span className=\"metadata\"><span className=\"time\">{justNow}</span></span></p>\n        <p>now it's time to add new items for {list.name} <span className=\"metadata\"><span className=\"time\">{justNow}</span></span></p>\n        <p>after you you added new items, you can click on them to count them up <span className=\"metadata\"><span className=\"time\">{justNow}</span></span></p>\n        <p>happy counting! ♥ <span className=\"metadata\"><span className=\"time\">{justNow}</span></span></p>\n      </div>\n    </div>\n  );\n}\n\nexport class List extends React.Component {\n\n  render() {\n\n    \n    console.log(\"RENDER\", this.props.item);\n\n    if(typeof this.props.item === \"undefined\") {\n      return <NoListComponent />;\n    }\n\n    const currentColor = this.props.item.color || randomColor();\n    const currentColorString = hexToRgba(currentColor, 0.2);\n\n    const listStyle = {\n      backgroundColor: currentColorString\n    };\n\n    const listId = this.props.itemKey;\n    const listLocked = this.props.item.locked;\n\n    const listLockedButtonClassName = listLocked ? \"danger\" : \"link\";\n\n    let totalTicks = 0;\n\n    return (\n      <div className=\"row\">\n\n\n        <div className=\"col-12 listHeadline\" style={listStyle}>\n          <h4>\n            <Link to=\"/\">\n              <FiArrowLeftCircle size=\"28px\" />\n            </Link>\n            <span className=\"ml-2\">{this.props.item.name}</span>\n          </h4>\n          <div className=\"actions\">\n            <button type=\"button\" className={`btn btn-${listLockedButtonClassName}`} onClick={() => {\n              this.props.toggleLockedList(listId);\n            }}>\n              {(listLocked ? <FiUnlock size=\"24px\" /> : <FiLock size=\"24px\" />)}\n            </button>\n          </div>\n        </div>\n\n        {this.props.item.items.length === 0 ? showTutorial(this.props.item) : null}\n\n        <div className=\"ticks col-12\">\n          {this.props.item.items.map((tickItem, itemKey) => {\n\n            const currentColor = tickItem.color || randomColor();\n            const currentColorString = hexToRgba(currentColor, 0.2);\n\n            const itemStyle = {\n              backgroundColor: currentColorString\n            };\n\n            const menuOpened = tickItem.menuOpened || false;\n            const menuStyle = {\n              display: menuOpened ? 'block' : 'none'\n            };\n\n            const colValues = {\n              values: listLocked ? 12 : 10\n            };\n\n            totalTicks += tickItem.ticks;\n\n            return (\n              <div key={itemKey} className=\"row tickItem\" style={itemStyle}>\n                <div className={`col-${colValues.values} tickItemButton`} onClick={(event) => {\n                  console.log(event.target.parentElement);\n                  this.props.handleTickUp({\n                    item: tickItem,\n                    id: itemKey,\n                    list: listId\n                  });\n                }}>\n                  \n                  <span className=\"itemName\">{tickItem.name}</span>\n                  <span className=\"itemCount\">{tickItem.ticks}</span>\n\n                  <FiArrowUp className=\"tick-arrow tick-arrow-up\" color=\"fff\" />\n                  <FiArrowDown className=\"tick-arrow tick-arrow-down\" color=\"fff\" />\n\n                </div>\n\n                {(!listLocked ?\n                  <div className={`col-2 d-flex align-items-center justify-content-around menu-separator`} onClick={props => {\n                    this.props.toggleItemMenu(listId, itemKey);\n                  }}>\n\n                    <button type=\"button\" className=\"btn btn-link btn-lg actionLink\" >\n                      <FiMoreHorizontal size=\"32px\" />\n                    </button>\n\n                  </div>\n                  : null)}\n\n                {(!listLocked ?\n\n                  <div className=\"col-12\" style={menuStyle}>\n                    <div className=\"row justify-content-between align-items-center listMenu\">\n\n                      <button className=\"btn btn-primary btn-lg\" onClick={() => {\n                        this.props.handleChangeItem(listId, itemKey);\n                      }}>\n                        <FiEdit />\n                        <span>edit name</span>\n                      </button>\n                      <button className=\"btn btn-secondary btn-lg\" onClick={() => {\n                        this.props.handleChangeItemValue(listId, itemKey);\n                      }}>\n                        <FiEdit />\n                        <span>edit value</span>\n                      </button>\n                      <button className=\"btn btn-danger btn-lg\" onClick={() => {\n                        this.props.handleRemoveItem(listId, itemKey);\n                      }}>\n                        <MdRemoveCircle />\n                        <span>remove</span>\n                      </button>\n                    </div>\n                  </div> : null)\n                }\n\n\n              </div>\n            );\n\n          })}\n\n          {totalTicks > 0 ? \n            <div className=\"row totals\">\n            <div className=\"col-6 text-left totalCaption\">Total</div>\n            <div className=\"col-4 text-right totalTicks\">{totalTicks}</div>\n\n          </div>\n            : null}\n\n          \n        </div>\n\n        <AddForm\n          type=\"item\"\n          listId={listId}\n          handleAddList={this.props.handleAddList}\n          handleAddItem={this.props.handleAddItem}\n        />\n      </div>\n    );\n\n  }\n\n}\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { FiMoreHorizontal, FiEdit, FiLock, FiAlignJustify } from 'react-icons/fi';\nimport { MdPalette, MdRemoveCircle } from 'react-icons/md';\n\nimport { randomColor } from 'randomcolor';\nimport hexToRgba from 'hex-to-rgba';\n\nimport { AddForm } from './AddForm';\n\nimport moment from 'moment';\n\nfunction showWelcome() {\n\n  const justNow = moment().format(\"H:m a\");\n\n  return (\n    <div className=\"col-12\">\n      <div className=\"tutorial-card\">\n        <p>hey, <span className=\"metadata\"><span className=\"time\">{justNow}</span></span></p>\n        <p>to start with your first list, just enter the name into the field on the bottom <span className=\"metadata\"><span className=\"time\">{justNow}</span></span></p>\n        <p>after you created your first list, you can enter it by clicking on it <span className=\"metadata\"><span className=\"time\">{justNow}</span></span></p>\n        <p>much love, oerwi ♥ <span className=\"metadata\"><span className=\"time\">{justNow}</span></span></p>\n      </div>\n    </div>\n  );\n}\n\nexport class Index extends React.Component {\n\n  render() {\n\n    return (\n      <div className=\"row\">\n\n        {this.props.lists.length === 0 ? showWelcome() : null}\n\n        <div className=\"col-12 listContainer\">\n\n\n          {this.props.lists.map((list, i) => {\n\n            const currentColor = list.color || randomColor();\n            const currentColorString = hexToRgba(currentColor, 0.2);\n\n            const listStyle = {\n              backgroundColor: currentColorString\n            };\n\n            const menuOpened = list.menuOpened || false;\n            const menuStyle = {\n              display: menuOpened ? 'block' : 'none'\n            };\n\n            const listLocked = list.locked;\n\n            return (\n              <div key={i} className=\"row\" style={listStyle}>\n\n                <Link to={`/list/${list.id}`} className=\"col-10\">\n\n                  <div className=\"listItem\">\n                    <h5>\n                      {list.name}\n                    </h5>\n                    <div className=\"listAttributes d-flex\">\n                    {(listLocked ? <FiLock /> : null)}\n                    <small className=\"float-right ml-2\">{list.items.length} <FiAlignJustify size=\"16px\" /></small>\n                    </div>\n                  </div>\n                </Link>\n\n\n                <div className=\"col-2 d-flex align-items-center justify-content-around menu-separator\" onClick={props => {\n                  this.props.toggleMenu(i);\n                }}>\n                  <button type=\"button\" className=\"btn btn-link btn-lg actionLink\" >\n                    <FiMoreHorizontal size=\"32px\" />\n                  </button>\n\n                </div>\n\n                <div className=\"col-12\" style={menuStyle}>\n                  <div className=\"row justify-content-between align-items-center listMenu\">\n\n                    <button className=\"btn btn-primary btn-lg\" onClick={() => {\n                      this.props.handleChangeList(i);\n                    }}>\n                      <FiEdit />\n                      <span>edit name</span>\n                    </button>\n                    <button className=\"btn btn-secondary btn-lg\" onClick={() => {\n                      this.props.handleListColorChange(i);\n                    }}>\n                      <MdPalette />\n                      <span>new color</span>\n                    </button>\n                    {(!listLocked ?\n\n                      <button className=\"btn btn-danger btn-lg\" onClick={() => {\n                        this.props.handleRemoveList(i);\n                      }}>\n                        <MdRemoveCircle />\n                        <span>remove</span>\n                      </button> :\n                      null\n\n                    )}\n                  </div>\n                </div>\n\n              </div>\n            );\n          })}\n\n        </div>\n\n        <AddForm\n          type=\"list\"\n          handleAddList={this.props.handleAddList}\n          handleAddItem={this.props.handleAddItem}\n        />\n\n      </div>\n    );\n\n  }\n\n};\n","import React from 'react';\r\nimport './App.css';\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport { List } from './components/list/List';\r\nimport { Index } from './components/Index';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport 'jquery';\r\nimport 'popper.js';\r\nimport 'bootstrap/dist/js/bootstrap.min';\r\n\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport { randomColor } from 'randomcolor';\r\n\r\nimport { TiSpiral } from 'react-icons/ti';\r\n\r\nimport Swal from 'sweetalert2';\r\nimport BlockUi from 'react-block-ui';\r\nimport 'react-block-ui/style.css';\r\n\r\nimport { v1 as uuidv1 } from 'uuid';\r\n\r\n//import { SocialIcon } from 'react-social-icons';\r\n\r\nconst DEFAULT_STATE = {\r\n  lists: [],\r\n  counter: 0,\r\n  isBlocked: false\r\n};\r\n\r\nconst DEFAULT_LIST = {\r\n  id: false,\r\n  name: '',\r\n  items: [],\r\n  color: '',\r\n  locked: false,\r\n  menuOpened: false\r\n};\r\n\r\nconst DEFAULT_ITEM = {\r\n  name: '',\r\n  ticks: 0,\r\n  color: '',\r\n  menuOpened: false\r\n};\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleAddList = this.handleAddList.bind(this);\r\n    this.handleRemoveList = this.handleRemoveList.bind(this);\r\n\r\n    this.handleAddItem = this.handleAddItem.bind(this);\r\n    this.handleRemoveItem = this.handleRemoveItem.bind(this);\r\n\r\n    this.handleChangeList = this.handleChangeList.bind(this);\r\n    this.handleChangeItem = this.handleChangeItem.bind(this);\r\n    this.handleChangeItemValue = this.handleChangeItemValue.bind(this);\r\n\r\n    this.handleListColorChange = this.handleListColorChange.bind(this);\r\n\r\n    this.toggleMenu = this.toggleMenu.bind(this);\r\n    this.toggleLockedList = this.toggleLockedList.bind(this);\r\n\r\n    this.toggleItemMenu = this.toggleItemMenu.bind(this);\r\n\r\n    this.handleTickUp = this.handleTickUp.bind(this);\r\n    this.resetAll = this.resetAll.bind(this);\r\n\r\n    let loadedData = localStorage.getItem('STORAGE');\r\n\r\n    if (loadedData) {\r\n\r\n      let parsedState = JSON.parse(loadedData);\r\n\r\n      if (parsedState.lists.length) {\r\n\r\n        parsedState.lists.forEach((list) => {\r\n          list.menuOpened = DEFAULT_LIST.menuOpened;\r\n          list.locked = list.locked || DEFAULT_LIST.locked;\r\n\r\n          if (list.items.length) {\r\n            list.items.forEach((item) => {\r\n\r\n              if (typeof item.ticks === \"object\") {\r\n\r\n                if (item.ticks == null) {\r\n                  item.ticks = 0;\r\n                } else {\r\n                  item.ticks = item.ticks.length;\r\n                }\r\n\r\n              }\r\n\r\n              item.menuOpened = DEFAULT_ITEM.menuOpened;\r\n            });\r\n          }\r\n\r\n        });\r\n\r\n      }\r\n\r\n      parsedState.isBlocked = false;\r\n\r\n      this.state = parsedState;\r\n\r\n    } else {\r\n      this.state = Object.assign({}, DEFAULT_STATE);\r\n    }\r\n\r\n  }\r\n\r\n  componentDidUpdate() {\r\n\r\n    window.addEventListener('blockApp', () => {\r\n      this.setState({ isBlocked: true });\r\n    });\r\n\r\n    window.addEventListener('unblockApp', () => {\r\n      this.setState({ isBlocked: false });\r\n    });\r\n\r\n  }\r\n\r\n  handleAddList(data, form) {\r\n\r\n    if (typeof data.name === 'undefined') {\r\n      return toast.error(\"name is missing\");\r\n    }\r\n\r\n    if (data.name.length < 1) {\r\n      return toast.error(\"name is too short\");\r\n    }\r\n\r\n    let currentState = Object.assign({}, this.state);\r\n\r\n    let newList = Object.assign({}, DEFAULT_LIST);\r\n    newList.id = uuidv1();\r\n    newList.name = data.name;\r\n\r\n    // add random color for new list\r\n    newList.color = randomColor();\r\n\r\n    currentState.lists = currentState.lists.concat([newList]);\r\n\r\n    this.setState(currentState, this.upload);\r\n    form.resetForm();\r\n\r\n  }\r\n\r\n  handleRemoveList(id) {\r\n\r\n    let currentState = Object.assign({}, this.state);\r\n\r\n    Swal.fire({\r\n      type: \"warning\",\r\n      title: this.t('remove list'),\r\n      text: `do you want to delete ${currentState.lists[id].name}?`,\r\n      showCancelButton: true\r\n    }).then((result) => {\r\n\r\n      if (typeof result.value === \"boolean\" && result.value === true) {\r\n        delete currentState.lists[id];\r\n        currentState.lists = currentState.lists.filter(() => { return true; });\r\n        this.setState(currentState, this.upload);\r\n      } else {\r\n        this.toggleMenu(id);\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n  handleRemoveItem(listId, id) {\r\n\r\n    let currentState = Object.assign({}, this.state);\r\n\r\n    Swal.fire({\r\n      type: \"warning\",\r\n      title: \"remove item from list\",\r\n      text: `do you want to delete ${currentState.lists[listId].items[id].name}?`,\r\n      showCancelButton: true\r\n    }).then((result) => {\r\n\r\n      if (typeof result.value === \"boolean\" && result.value === true) {\r\n        delete currentState.lists[listId].items[id];\r\n        currentState.lists[listId].items = currentState.lists[listId].items.filter(() => { return true; });\r\n        this.setState(currentState, this.upload);\r\n      } else {\r\n        this.toggleItemMenu(listId, id);\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n  handleChangeList(id) {\r\n\r\n    let currentState = Object.assign({}, this.state);\r\n    let currentName = String(currentState.lists[id].name);\r\n\r\n    Swal.fire({\r\n      type: 'question',\r\n      input: 'text',\r\n      inputValue: currentName\r\n    }).then((result) => {\r\n\r\n      if (typeof result.value === \"string\" && result.value.length > 0) {\r\n\r\n        let rawInputName = result.value;\r\n\r\n        if (rawInputName === null) {\r\n          return toast.error('rename canceled');\r\n        }\r\n    \r\n        let newName = String(rawInputName);\r\n    \r\n        if (currentName === newName) {\r\n          return toast.warn('nothing changed');\r\n        }\r\n    \r\n        if (newName.length < 1) {\r\n          return toast.error('name can\\'t be empty');\r\n        }\r\n    \r\n        currentState.lists[id].name = newName;\r\n        this.setState(currentState, () => {\r\n          this.toggleMenu(id);\r\n          this.upload();\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n  handleListColorChange(id) {\r\n    let currentState = Object.assign({}, this.state);\r\n    currentState.lists[id].color = randomColor();\r\n    this.setState(currentState, this.upload);\r\n  }\r\n\r\n  handleChangeItem(listId, id) {\r\n\r\n    let currentState = Object.assign({}, this.state);\r\n    let currentName = String(currentState.lists[listId].items[id].name);\r\n\r\n    Swal.fire({\r\n      type: 'question',\r\n      input: 'text',\r\n      inputValue: currentName\r\n    }).then((result) => {\r\n\r\n      if (typeof result.value === \"string\" && result.value.length > 0) {\r\n\r\n        let rawInputName = result.value;\r\n\r\n        if (rawInputName === null) {\r\n          return toast.error('rename canceled');\r\n        }\r\n    \r\n        let newName = String(rawInputName);\r\n    \r\n        if (currentName === newName) {\r\n          return toast.warn('nothing changed');\r\n        }\r\n    \r\n        if (newName.length < 1) {\r\n          return toast.error('name can\\'t be empty');\r\n        }\r\n    \r\n        currentState.lists[listId].items[id].name = newName;\r\n        this.setState(currentState, () => {\r\n          this.toggleItemMenu(listId, id);\r\n          this.upload();\r\n        });\r\n\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n  handleChangeItemValue(listId, id) {\r\n\r\n    let currentState = Object.assign({}, this.state);\r\n    let currentItem = currentState.lists[listId].items[id];\r\n\r\n    Swal.fire({\r\n      title: \"change\",\r\n      input: \"number\",\r\n      inputValue: currentItem.ticks,\r\n      inputAttributes: {\r\n        min: 0\r\n      },\r\n      buttons: true,\r\n      inputValidator: (value) => {\r\n        if (!value) {\r\n          return 'invalid number'\r\n        }\r\n      }\r\n    }).then((input) => {\r\n\r\n      if (typeof input.value !== 'undefined') {\r\n        let inputValue = parseInt(input.value);\r\n\r\n        if (inputValue >= 0) {\r\n          currentItem.ticks = inputValue;\r\n          this.setState(currentState, () => {\r\n            this.toggleItemMenu(listId, id);\r\n            this.upload();\r\n          });\r\n        } else {\r\n          toast.error('invalid number');\r\n        }\r\n\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n  handleAddItem(data, form) {\r\n\r\n    if (typeof data.name === 'undefined') {\r\n      return toast.error(\"name is missing\");\r\n    }\r\n\r\n    if (data.name.length < 1) {\r\n      return toast.error(\"name is too short\");\r\n    }\r\n\r\n    let currentState = Object.assign({}, this.state);\r\n\r\n    let newItem = Object.assign({}, DEFAULT_ITEM);\r\n    newItem.name = data.name;\r\n    newItem.color = randomColor();\r\n\r\n    let itemKey = parseInt(data.id);\r\n    currentState.lists[itemKey].items = currentState.lists[itemKey].items.concat([newItem]);\r\n\r\n    this.setState(currentState, this.upload);\r\n    form.resetForm();\r\n\r\n  }\r\n\r\n  handleTickUp(conf) {\r\n\r\n    let currentState = this.state;\r\n\r\n    if (currentState.lists[conf.list].locked === true) {\r\n      return;\r\n    }\r\n\r\n    let newItem = Object.assign({}, currentState.lists[conf.list].items[conf.id]);\r\n\r\n    newItem.ticks += 1;\r\n    newItem.color = randomColor();\r\n\r\n    currentState.lists[conf.list].items[conf.id] = newItem;\r\n\r\n    this.setState(currentState, this.upload);\r\n\r\n  }\r\n\r\n  resetAll() {\r\n\r\n\r\n    Swal.fire({\r\n      type: \"warning\",\r\n      title: \"reset all to defaults\",\r\n      text: `do you want to reset all to defaults?`,\r\n      showCancelButton: true\r\n    }).then((result) => {\r\n\r\n      if (typeof result.value === \"boolean\" && result.value === true) {\r\n\r\n        let newState = Object.assign({}, DEFAULT_STATE);\r\n        this.setState(newState, () => {\r\n          localStorage.removeItem('STORAGE');\r\n          this.upload();\r\n        })\r\n\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n  upload() {\r\n    localStorage.setItem('STORAGE', JSON.stringify(this.state));\r\n  }\r\n\r\n  toggleMenu(id) {\r\n    let currentState = Object.assign({}, this.state);\r\n    currentState.lists[id].menuOpened = !currentState.lists[id].menuOpened;\r\n    this.setState(currentState);\r\n  }\r\n\r\n  toggleLockedList(id) {\r\n    let currentState = Object.assign({}, this.state);\r\n    currentState.lists[id].locked = !currentState.lists[id].locked;\r\n    this.setState(currentState, this.upload);\r\n  }\r\n\r\n  toggleItemMenu(listId, id) {\r\n    let currentState = Object.assign({}, this.state);\r\n    console.log(currentState);\r\n    currentState.lists[listId].items[id].menuOpened = !currentState.lists[listId].items[id].menuOpened;\r\n    this.setState(currentState);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <BlockUi tag=\"div\" className=\"App\" blocking={this.state.isBlocked} message=\"Updating\">\r\n        <ToastContainer />\r\n        <nav className=\"navbar navbar-dark\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            <img src=\"/logo192.png\" width=\"32\" height=\"32\" className=\"d-inline-block align-top rounded-circle mr-2\" alt=\"\" />\r\n            <span className=\"brand-name mr-2\">oerwi</span>\r\n          </a>\r\n          <div className=\"navbar-right\">\r\n            \r\n          <span className=\"badge badge-danger version-badge\">alpha5</span>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          </div>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            \r\n            <ul className=\"navbar-nav mr-auto mt-2\">\r\n              <li className=\"nav-item\">\r\n                <button type=\"button\" className=\"btn btn-danger btn-lg btn-block\" onClick={this.resetAll}>\r\n                  <TiSpiral /> reset all\r\n                  </button>\r\n              </li>\r\n            </ul>\r\n\r\n            <small><span role=\"img\" aria-label=\"developer\">💻</span> developed and maintained by <a href=\"https://shroomlife.de\" target=\"_blank\" rel=\"noopener noreferrer\">shroomlife</a></small>\r\n            <small><span role=\"img\" aria-label=\"sos\">🆘</span> questions, feedback, hate, love? <a href=\"mailto:robin@shroomlife.de\">mail me</a></small>\r\n          </div>\r\n\r\n        </nav>\r\n\r\n        <div className=\"container\">\r\n          <Router>\r\n            <Switch>\r\n              <Route path=\"/list/:id\" exact render={props =>\r\n                <List\r\n                  itemKey={props.match.params.id}\r\n                  item={this.state.lists.find((list) => {\r\n                    return String(list.id) === String(props.match.params.id);\r\n                  })}\r\n                  handleAddItem={this.handleAddItem}\r\n                  handleTickUp={this.handleTickUp}\r\n                  handleRemoveItem={this.handleRemoveItem}\r\n                  handleChangeItem={this.handleChangeItem}\r\n                  handleChangeItemValue={this.handleChangeItemValue}\r\n                  handleItemColorChange={this.handleItemColorChange}\r\n                  toggleItemMenu={this.toggleItemMenu}\r\n                  toggleLockedList={this.toggleLockedList} />} />\r\n              <Route render={() =>\r\n                <Index\r\n                  lists={this.state.lists}\r\n                  handleAddList={this.handleAddList}\r\n                  handleRemoveList={this.handleRemoveList}\r\n                  handleChangeList={this.handleChangeList}\r\n                  handleListColorChange={this.handleListColorChange}\r\n                  toggleMenu={this.toggleMenu} />} />\r\n            </Switch>\r\n          </Router>\r\n        </div>\r\n\r\n      </BlockUi>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}